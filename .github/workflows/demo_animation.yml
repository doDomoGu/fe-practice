# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Deploy demo_animation

on:
  push:
    branches: ['release/demo_animation']

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: release/demo_animation

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build && zip
        run: |
          pnpm -F @dodomogu/demo_animation build
          cd ./demo/animation/
          ls -al ./dist
          tar -zcvf dist.tar.gz ./dist

      - name: ssh-scp-ssh-pipelines
        # You may pin to the exact commit or the version.
        # uses: cross-the-world/ssh-scp-ssh-pipelines@78e864b4890087a58248ff39320406971ca88b89
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
        with:
          # ssh remote host
          host: ${{vars.SERVER_HOST}}
          # ssh remote port
          #port: # optional, default is 22
          # ssh remote user
          user: ${{vars.SERVER_USER}}
          # content of ssh private key. ex raw content of ~/.ssh/id_rsa
          #key: ${{secrets.PRIVATE_KEY}} # optional
          # ssh remote password
          pass: ${{secrets.SERVER_PWD}} # optional
          # connection timeout to remote host
          #connect_timeout: # optional, default is 30s
          # execute pre-commands before scp
          #first_ssh: # optional
          # scp from local to remote
          scp: |
            './demo/animation/dist.tar.gz' => /www/html/demo_animation
          # execute post-commands after scp
          last_ssh: |
            cd /www/html/demo_animation/
            rm -rf dist
            tar -zxvf dist.tar.gz
