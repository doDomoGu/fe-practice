import{_ as a,c as s,o as e,a2 as i}from"./chunks/framework.DOwwFb84.js";const t="/assets/image.DSnYZ6cx.jpeg",u=JSON.parse('{"title":"代码整洁的 Javascript","description":"","frontmatter":{"lang":"zh-CN"},"headers":[],"relativePath":"knowledge-system/js/clean_code.md","filePath":"knowledge-system/js/clean_code.md"}'),n={name:"knowledge-system/js/clean_code.md"},h=i('<h1 id="代码整洁的-javascript" tabindex="-1">代码整洁的 Javascript <a class="header-anchor" href="#代码整洁的-javascript" aria-label="Permalink to &quot;代码整洁的 Javascript&quot;">​</a></h1><blockquote><p><a href="https://www.yuque.com/lpldplws/web/uc3snh" target="_blank" rel="noreferrer">原文转载</a></p></blockquote><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p><img src="'+t+'" alt="image"></p><p>将源自 Robert C. Martin 的 <a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882" target="_blank" rel="noreferrer">Clean Code</a>的软件工程原则适配到 JavaScript。</p><p>这不是一个代码风格指南，它是一个使用 JavaScript 来生产可读的，可重用的，以及可重构的软件的指南。</p><p>这里的每一项原则都不是必须遵守的，甚至只有更少的能够被广泛认可。 这些仅仅是指南而已，但是却是 <em>Clean Code</em> 作者多年经验的结晶。</p><p>我们的软件工程行业只有短短的 50 年，依然有很多要我们去学习。 当软件架构与建筑架构一样古老时，也许我们将会有硬性的规则去遵守。 而现在，让这些指南做为你和你的团队生产的 JavaScript 代码的 质量的标准。</p><p>还有一件事：知道这些指南并不能马上让你成为一个更加出色的软件开发者，并且使用它们工作多年也并不意味着你不再会犯错误。每一段代码最开始都是草稿，像湿粘土一样被打造成最终的形态。最后当我们和搭档们一起审查代码时清除那些不完善之处，不要因为最初需要改善的草稿代码而自责，而是对那些代码下手。</p><h2 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-label="Permalink to &quot;变量&quot;">​</a></h2><h3 id="使用有意义并且可读的变量名称" tabindex="-1">使用有意义并且可读的变量名称 <a class="header-anchor" href="#使用有意义并且可读的变量名称" aria-label="Permalink to &quot;使用有意义并且可读的变量名称&quot;">​</a></h3><p><strong>不好的：</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> yyyymmdstr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> moment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYY/MM/DD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>好的：</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> currentDate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> moment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYY/MM/DD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h2><h2 id="对象和数据结构" tabindex="-1">对象和数据结构 <a class="header-anchor" href="#对象和数据结构" aria-label="Permalink to &quot;对象和数据结构&quot;">​</a></h2><h2 id="类" tabindex="-1">类 <a class="header-anchor" href="#类" aria-label="Permalink to &quot;类&quot;">​</a></h2><h2 id="solid" tabindex="-1">SOLID <a class="header-anchor" href="#solid" aria-label="Permalink to &quot;SOLID&quot;">​</a></h2>',19),l=[h];function r(o,p,d,c,k,g){return e(),s("div",null,l)}const _=a(n,[["render",r]]);export{u as __pageData,_ as default};
